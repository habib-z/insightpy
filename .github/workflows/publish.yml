name: Python Package CI/CD

on:
  push:
    branches:
      - main  # Adjust branch name as needed
    tags:
      - 'v0.0.*'  # Only trigger on version tags (e.g., v1.0.0)

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'  # Adjust to your minimum Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -e .[dev]  # Install development dependencies for testing

      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV


      - name: Display current directory structure
        run: |
          echo "Current directory:"  
          pwd  
          echo "Listing files:"  
          ls -R  # List all files recursively  

      - name: Run tests
        run: pytest tests  # Ensure your test folder is named "tests"

  release:
    needs: test  # This ensures release only happens if tests pass
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install build tools
        run: |
          pip install build twine

      - name: Build package
        run: |
          python -m build

      - name: Publish to PyPI
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          twine upload dist/*

  tag:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Set PYTHONPATH
        run: echo "PYTHONPATH=$(pwd)" >> $GITHUB_ENV

      - name: Create a tag
        run: |
          git fetch --prune --unshallow
          git tag v$(python setup.py --version)
          git push origin --tags
